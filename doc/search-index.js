var searchIndex = new Map(JSON.parse('[["velox_graph",{"t":"FPFPPPFPPPPPFFGNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNNONNONNNNNNNNNNNNNNNNNNNNNNNN","n":["Connection","ConnectionNotSet","ConnectionsForward","EmptySlotsVectorIsEmpty","FileFail","IoError","Node","SlotNotAllocated","SlotNotUsed","TomlDeserializeError","TomlSerializeError","Unknown","VeloxGraghSettings","VeloxGraph","VeloxGraphError","borrow","","","","","","borrow_mut","","","","","","clone","","","clone_into","","","clone_to_uninit","","","connections_backward_get_all","connections_forward_get_all","data","","data_vec","deserialize","fmt","","","","","from","","","","","","","","","get","into","","","","","","lookup_hash","new","node_create","node_delete","node_get","node_id","nodes_connection_remove","nodes_connection_set","num_entries","serialize","source","to_owned","","","to_string","try_from","","","","","","try_into","","","","","","type_id","","","","",""],"q":[[0,"velox_graph"],[96,"core::clone"],[97,"std::collections::hash::set"],[98,"core::result"],[99,"serde::de"],[100,"core::fmt"],[101,"std::io::error"],[102,"toml::ser"],[103,"toml::de"],[104,"serde::ser"],[105,"core::error"],[106,"core::option"],[107,"alloc::string"],[108,"core::any"]],"i":"`Al`000`00000```Bj1Affjl453210210210210002013553214555532101453210144442444352105453210453210453210","f":"```````````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{{f{c}}}}}{{f{c}}}{hh}}{{{b{{j{c}}}}}{{j{c}}}{hh}}{{{b{{l{ce}}}}}{{l{ce}}}{hh}{hh}}{{b{b{dc}}}n{}}00{{bA`}n}00{{{b{{l{ce}}}}}{{b{{Ad{Ab}}}}}hh}{{{b{{l{ce}}}}}{{b{{j{e}}}}}hh}```{c{{Ah{Af}}}Aj}{{{b{Al}}{b{dAn}}}B`}0{{{b{Af}}{b{dAn}}}B`}{{{b{{f{c}}}}{b{dAn}}}B`{Bbh}}{{{b{{j{c}}}}{b{dAn}}}B`{Bbh}}{cc{}}{BdAl}{BfAl}{BhAl}33333{{{b{{j{c}}}}Ab}{{Ah{{b{{f{c}}}}Al}}}h}{{}c{}}00000`{{}{{Bj{ce}}}hh}{{{b{d{Bj{ce}}}}c}Abhh}{{{b{d{Bj{ce}}}}Ab}{{Ah{nAl}}}hh}{{{b{d{Bj{ce}}}}Ab}{{Ah{{b{d{l{ce}}}}Al}}}hh}`{{{b{d{Bj{ce}}}}AbAb}{{Ah{nAl}}}hh}{{{b{d{Bj{ce}}}}AbAbe}{{Ah{nAl}}}hh}`{{{b{Af}}c}AhBl}{{{b{Al}}}{{C`{{b{Bn}}}}}}{bc{}}00{bCb}{c{{Ah{e}}}{}{}}00000{{}{{Ah{c}}}{}}00000{bCd}00000","D":"Bj","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Connection",0],[10,"Clone",96],[5,"ConnectionsForward",0],[5,"Node",0],[1,"unit"],[1,"u8"],[1,"usize"],[5,"HashSet",97],[5,"VeloxGraghSettings",0],[6,"Result",98,null,1],[10,"Deserializer",99],[6,"VeloxGraphError",0],[5,"Formatter",100],[8,"Result",100],[10,"Debug",100],[5,"Error",101],[5,"Error",102],[5,"Error",103],[5,"VeloxGraph",0],[10,"Serializer",104],[10,"Error",105],[6,"Option",106,null,1],[5,"String",107],[5,"TypeId",108]],"r":[],"b":[[42,"impl-Debug-for-VeloxGraphError"],[43,"impl-Display-for-VeloxGraphError"],[48,"impl-From%3CError%3E-for-VeloxGraphError"],[49,"impl-From%3CError%3E-for-VeloxGraphError"],[50,"impl-From%3CError%3E-for-VeloxGraphError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsABgAAACQAJwAIADEAAgBAAAAARQAAAEgAGAA=","P":[[15,"T"],[27,"ConnectionT"],[29,"NodeT,ConnectionT"],[30,"T"],[33,""],[36,"NodeT,ConnectionT"],[41,"__D"],[42,""],[45,"ConnectionT"],[47,"T"],[48,""],[51,"T"],[56,"ConnectionT"],[57,"U"],[64,"NodeT,ConnectionT"],[72,"__S"],[73,""],[74,"T"],[77,""],[78,"U,T"],[84,"U"],[90,""]]}],["velox_graph",{"t":"FPPPFPPPPPFFGNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNN","n":["Connection","EmptySlotsVectorIsEmpty","FileFail","IoError","Node","SlotNotAllocated","SlotNotUsed","TomlDeserializeError","TomlSerializeError","Unknown","VeloxGraghSettings","VeloxGraph","VeloxGraphError","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","connections_backward_get","connections_forward_get","data","","deserialize","fmt","","","","from","","","","","","","","into","","","","","new","node_create","node_delete","node_get","node_id","nodes_connection_create","nodes_connection_delete","num_entries","serialize","source","to_owned","","to_string","try_from","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"velox_graph"],[79,"core::clone"],[80,"std::collections::hash::set"],[81,"std::collections::hash::map"],[82,"core::result"],[83,"serde::de"],[84,"core::fmt"],[85,"toml::de"],[86,"toml::ser"],[87,"std::io::error"],[88,"serde::ser"],[89,"core::error"],[90,"core::option"],[91,"alloc::string"],[92,"core::any"]],"i":"`Al00`00000```Bj1Affj3421010101000102442134444210342103333133324104342103421034210","f":"`````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{{f{c}}}}}{{f{c}}}{hh}}{{{b{{j{ce}}}}}{{j{ce}}}{hh}{hh}}{{b{b{dc}}}l{}}0{{bn}l}0{{{b{{j{ce}}}}}{{b{{Ab{A`}}}}}hh}{{{b{{j{ce}}}}}{{b{{Ad{A`{f{e}}}}}}}hh}``{c{{Ah{Af}}}Aj}{{{b{Al}}{b{dAn}}}B`}0{{{b{Af}}{b{dAn}}}B`}{{{b{{f{c}}}}{b{dAn}}}B`{Bbh}}{cc{}}{BdAl}{BfAl}{BhAl}3333{{}c{}}0000{{}{{Bj{ce}}}hh}{{{b{d{Bj{ce}}}}c}A`hh}{{{b{d{Bj{ce}}}}A`}{{Ah{lAl}}}hh}{{{b{d{Bj{ce}}}}A`}{{Ah{{b{d{j{ce}}}}Al}}}hh}`{{{b{d{Bj{ce}}}}A`A`e}{{Ah{lAl}}}hh}{{{b{d{Bj{ce}}}}A`A`}{{Ah{lAl}}}hh}`{{{b{Af}}c}AhBl}{{{b{Al}}}{{C`{{b{Bn}}}}}}{bc{}}0{bCb}{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000{bCd}0000","D":"Bd","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Connection",0],[10,"Clone",79],[5,"Node",0],[1,"unit"],[1,"u8"],[1,"usize"],[5,"HashSet",80],[5,"HashMap",81],[5,"VeloxGraghSettings",0],[6,"Result",82,null,1],[10,"Deserializer",83],[6,"VeloxGraphError",0],[5,"Formatter",84],[8,"Result",84],[10,"Debug",84],[5,"Error",85],[5,"Error",86],[5,"Error",87],[5,"VeloxGraph",0],[10,"Serializer",88],[10,"Error",89],[6,"Option",90,null,1],[5,"String",91],[5,"TypeId",92]],"r":[],"b":[[34,"impl-Display-for-VeloxGraphError"],[35,"impl-Debug-for-VeloxGraphError"],[39,"impl-From%3CError%3E-for-VeloxGraphError"],[40,"impl-From%3CError%3E-for-VeloxGraphError"],[41,"impl-From%3CError%3E-for-VeloxGraphError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD0ABQAAAB0AIAAGACgAAgA4AAAAOwAUAA==","P":[[13,"T"],[23,"ConnectionT"],[24,"NodeT,ConnectionT"],[25,"T"],[27,""],[29,"NodeT,ConnectionT"],[33,"__D"],[34,""],[37,"ConnectionT"],[38,"T"],[39,""],[42,"T"],[46,"U"],[51,"NodeT,ConnectionT"],[59,"__S"],[60,""],[61,"T"],[63,""],[64,"U,T"],[69,"U"],[74,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3135,2869]}